version: "3.9"

services:
  dev_frontend:
    container_name: dev_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - 3001:3000
    networks:
      dev_hikingdom_net:
        ipv4_address: 172.25.0.2

  dev_backend_discovery:
    container_name: dev_backend_discovery
    build:
      context: ./backend/discovery
      dockerfile: Dockerfile
      args:
        SERVER_MODE: dev
    ports:
      - 6472:8761
    environment:
      - TZ=Asia/Seoul
    networks:
      dev_hikingdom_net:
        ipv4_address: 172.25.0.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 7s

  dev_backend_service:
    container_name: dev_backend_service
    build:
      context: ./backend/service
      dockerfile: Dockerfile
      args:
        SERVER_MODE: dev
    ports:
      - 9001:8080
    environment:
      - TZ=Asia/Seoul
    networks:
      dev_hikingdom_net:
        ipv4_address: 172.25.0.5
    depends_on:
      dev_backend_discovery:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/members/auth/health-check"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s

  dev_backend_gateway:
    container_name: dev_backend_gateway
    build:
      context: ./backend/gateway
      dockerfile: Dockerfile
      args:
        SERVER_MODE: dev
    ports:
      - 8081:8080
    environment:
      - TZ=Asia/Seoul
    networks:
      dev_hikingdom_net:
        ipv4_address: 172.25.0.3
    depends_on:
      dev_backend_discovery:
        condition: service_healthy
      dev_backend_service:
        condition: service_healthy

networks:
  dev_hikingdom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
