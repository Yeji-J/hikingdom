plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.11'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'org.lightnsalt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

subprojects {
    group 'org.lightnsalt'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        // web
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-websocket'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

        // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

        // security
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

        // etc
        implementation 'com.google.code.gson:gson:2.10'
        implementation 'org.apache.commons:commons-lang3:3.9'
    }
}

project(':common') {
    dependencies {
        implementation project(':entity')
    }
}

project(':domain') {
    dependencies {
        implementation project(':entity')
        implementation project(':common')
    }
}
